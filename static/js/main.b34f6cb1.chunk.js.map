{"version":3,"sources":["page/login.js","page/home.js","page/createPo.js","page/calendar.js","page/other.js","page/daily.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","className","title","bordered","headStyle","textAlign","fontSize","style","width","onSubmit","Item","defaultValue","prefix","type","color","placeholder","to","htmlType","size","HomePage","gutter","span","display","paddingBottom","Option","Select","CreatePoPage","formItemLayout","labelCol","xs","sm","wrapperCol","defaultC","faker","random","number","defaultP","height","label","value","name","findName","commerce","productName","Math","floor","Group","marginTop","marginBottom","addonAfter","marginRight","dateCellRender","listData","date","content","getListData","map","item","key","trigger","status","text","monthCellRender","num","month","getMonthData","CalendarPage","Column","Table","levelName","selectorLV","data","index","push","customName","w1","w2","w3","w","wc","qc","createMock","OtherPage","dataSource","dataIndex","render","tags","tag","record","typeName","id","DailyPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b34f6cb1.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Form, Icon, Input, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container\">\n      <section className=\"content\">\n        <Card title={'WELCOME ABLE EASTERN'} bordered={false} headStyle={{textAlign:'center', fontSize: 25}} style={{ width: 400 }}>\n          <Form onSubmit={() => {}} className=\"login-form\">\n        <Form.Item>\n            <Input\n              defaultValue=\"admin\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />\n        </Form.Item>\n        <Form.Item>\n            <Input\n              defaultValue=\"admin\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n        </Form.Item>\n        <Form.Item>\n          <div className=\"form-button\">\n            <Link to=\"/home\">\n              <Button type=\"primary\" htmlType=\"button\" size='large'>\n                Log in\n              </Button>\n            </Link>\n          </div>\n        </Form.Item>\n      </Form>\n        </Card>\n      </section>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Card, Col, Row, Icon, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return (\n    <div className=\"container\">\n      <section className=\"content\">\n      <Row gutter={16}>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"fund\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/createPo\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  สร้าง PO\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"calendar\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/calendar\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  ปฏิทิน\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"appstore\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/other\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  Other\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n      </section>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport {\n  Card,\n  Form,\n  Input,\n  Radio,\n  Button,\n  DatePicker,\n  Select\n} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\n\nconst { Option } = Select;\n\nconst CreatePoPage = () => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const defaultC = faker.random.number()\n  const defaultP = faker.random.number()\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\">\n        <Card title=\"สร้าง PO\" style={{width:500}}>\n          <Form {...formItemLayout}>\n            <Form.Item label=\"วันที่สร้าง PO\"><DatePicker style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"เลขที่ PO\"><Input style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"รหัสลูกค้า\">\n              <Select style={{width: 200}} defaultValue={defaultC}>\n                <Option value={defaultC}>{defaultC}</Option>\n                <Option value={faker.random.number()}>{faker.random.number()}</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"ชื่อลูกค้า\">\n              <Input style={{width: 200}} defaultValue={faker.name.findName()} />\n            </Form.Item>\n            <Form.Item label=\"รหัสสินค้า\">\n              <Select style={{width: 200}} defaultValue={defaultP}>\n                <Option value={defaultP}>{defaultP}</Option>\n                <Option value={faker.random.number()}>{faker.random.number()}</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"ชื่อสินค้า\">\n              <Input style={{width: 200}} defaultValue={faker.commerce.productName()} />\n            </Form.Item>\n            <Form.Item label=\"ชั้น\"><Input style={{width: 50}} defaultValue={Math.floor(Math.random() * 100) + 1} /></Form.Item>\n            <Form.Item label=\"วันที่ส่งของ\"><DatePicker style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"เงื่อนไข\">\n              <Radio.Group defaultValue=\"yes\">\n                <Radio value=\"yes\"><span style={{color: '#43a047'}}>สามารถเปลี่ยนแปลงได้</span></Radio>\n                <Radio value=\"no\"><span style={{color: '#d32f2f'}}>ไม่สามารถเปลี่ยนแปลงได้</span></Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Card style={{ marginTop: 16, marginBottom: 20 }} type=\"inner\" title=\"คำนวณวัตถุดิบ\">\n             <Form {...formItemLayout}>\n              <Form.Item label=\"ไม้\">\n                <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n                </Form.Item>\n              <Form.Item label=\"ตะปู\">\n                <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n                </Form.Item>\n              <Form.Item label=\"ลูกเต๋า\">\n                <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n              </Form.Item>\n              <Form.Item label=\"ใส่ไม้\">\n                <Radio.Group defaultValue=\"w_easy\">\n                  <Radio value=\"w_easy\">ง่าย</Radio>\n                  <Radio value=\"w_normal\">ปกติ</Radio>\n                  <Radio value=\"w_hard\">ยาก</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Form.Item label=\"ประกอบไม้\">\n                <Radio.Group defaultValue=\"wh_easy\">\n                  <Radio value=\"wh_easy\">ง่าย</Radio>\n                  <Radio value=\"wh_normal\">ปกติ</Radio>\n                  <Radio value=\"wh_hard\">ยาก</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Form.Item label=\"QC\">\n                <Radio.Group defaultValue=\"qc_easy\">\n                  <Radio value=\"qc_easy\">ง่าย</Radio>\n                  <Radio value=\"qc_normal\">ปกติ</Radio>\n                  <Radio value=\"qc_hard\">ยาก</Radio>\n                </Radio.Group>\n              </Form.Item>\n              </Form>\n            </Card>\n            <div className=\"form-button\">\n              <Link to=\"/home\">\n                <Button type=\"primary\" htmlType=\"button\" size='large' style={{marginRight: 10}}>ยืนยัน</Button>\n              </Link>\n              <Link to=\"/home\">\n                <Button htmlType=\"button\" size='large'>ย้อนกลับ</Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default CreatePoPage","import React from 'react'\nimport { Card, Calendar, Badge, Popover } from 'antd'\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\n\nconst getListData = (value) => {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [\n        { type: 'error', content: 'งานเปลี่ยนแปลงไม่ได้' },\n      ];\n      break;\n    case 10:\n      listData = [\n        { type: 'success', content: 'งานเปลี่ยนแปลงได้' },\n      ];\n      break;\n    case 15:\n      listData = [\n        { type: 'success', content: 'งานเปลี่ยนแปลงได้' },\n      ];\n      break;\n    default:\n  }\n  return listData || [];\n}\n\nconst dateCellRender = (value) => {\n  const listData = getListData(value);\n  const content = (\n    <div>\n      <p>เลขที่ PO: {faker.random.number()}</p>\n      <p>ชื่อลูกค้า: {faker.name.findName()}</p>\n      <p>จำนวน: {faker.random.number(100)}</p>\n    </div>\n  );\n  return (\n    <ul className=\"events\">\n      {listData.map(item => (\n        <li key={item.content}>\n          <Popover content={content} title=\"รายละเอียด\" trigger=\"hover\">\n            <Badge status={item.type} text={item.content} />\n          </Popover>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getMonthData = (value) => {\n  if (value.month() === 8) {\n    return 1394;\n  }\n}\n\nconst monthCellRender = (value) =>{\n  const num = getMonthData(value);\n  return num ? (\n    <div className=\"notes-month\">\n      <section>{num}</section>\n      <span>Backlog number</span>\n    </div>\n  ) : null;\n}\n\n\nconst CalendarPage = () => {\n  return (\n    <div className=\"container\" style={{width: 700, height: 'auto'}}>\n      <Card>\n        <Link to=\"/home\">\n          <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n        </Link>\n        <Link to=\"/daily\">\n          <Button type=\"primary\" htmlType=\"button\" size='large'>วันปัจจุบัน</Button>\n        </Link>\n        <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n      </Card>\n    </div>\n  )\n}\n\nexport default CalendarPage","import React from 'react'\nimport { Table, Divider, Tag, Card } from 'antd';\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\nconst { Column } = Table;\n\nconst levelName = ['ง่าย', 'ปกติ', 'ยาก']\nconst selectorLV = faker.random.number(2)\nconst data = [];\nconst createMock = () => {\n  for (let index = 0; index < 20; index++) {\n    data.push(\n      {\n        key: faker.random.number(),\n        customName: faker.name.findName(),\n        size: faker.random.number(),\n        w1: faker.random.number(100),\n        w2: faker.random.number(100),\n        w3: faker.random.number(100),\n        w: [levelName[selectorLV]],\n        wc: [levelName[selectorLV]],\n        qc: [levelName[selectorLV]],\n      }\n    )\n  }\n}\n\ncreateMock()\n\nconst OtherPage = () => {\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\">\n        <Card>\n          <Link to=\"/home\">\n            <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n            <Button htmlType=\"button\" type=\"primary\" size='large' style={{marginRight: 10}}>เพิ่มสินค้า</Button>\n          </Link>\n          <Table dataSource={data} style={{marginTop: 20}}>\n            <Column title=\"รหัสสินค้า\" dataIndex=\"key\" key=\"key\" />\n            <Column title=\"ชื่อลูกค้า\" dataIndex=\"customName\" key=\"customName\" />\n            <Column title=\"ขนาดสินค้า\" dataIndex=\"size\" key=\"size\" />\n            <Column title=\"ไม้\" dataIndex=\"w1\" key=\"w1\" />\n            <Column title=\"ตะปู\" dataIndex=\"w2\" key=\"w2\" />\n            <Column title=\"ลูกเต๋า\" dataIndex=\"w3\" key=\"w3\" />\n            <Column\n              title=\"ใส่ไม้\"\n              dataIndex=\"w\"\n              key=\"w\"\n              render={tags => (\n                <span>\n                  {tags.map(tag => (\n                    <Tag color=\"blue\" key={tag}>\n                      {tag}\n                    </Tag>\n                  ))}\n                </span>\n              )}\n            />\n            <Column\n              title=\"ประกอบ\"\n              dataIndex=\"wc\"\n              key=\"wc\"\n              render={tags => (\n                <span>\n                  {tags.map(tag => (\n                    <Tag color=\"blue\" key={tag}>\n                      {tag}\n                    </Tag>\n                  ))}\n                </span>\n              )}\n            />\n            <Column\n              title=\"QC\"\n              dataIndex=\"qc\"\n              key=\"qc\"\n              render={tags => (\n                <span>\n                  {tags.map(tag => (\n                    <Tag color=\"blue\" key={tag}>\n                      {tag}\n                    </Tag>\n                  ))}\n                </span>\n              )}\n            />\n            <Column\n              title=\"\"\n              key=\"action\"\n              render={(text, record) => (\n                <span>\n                  <a>แก้ไข</a>\n                  <Divider type=\"vertical\" />\n                  <a>ลบ</a>\n                </span>\n              )}\n            />\n          </Table>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default OtherPage","import React from 'react'\nimport { Table, Card } from 'antd';\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\n\nconst { Column } = Table;\n\nconst typeName = ['change-section', 'fix-section']\nconst data = [\n  {'time': '8:00', id: faker.random.number()},\n  {'time': '9:00', id: faker.random.number()},\n  {'time': '10:00', id: faker.random.number()},\n  {'time': '11:00', id: faker.random.number()},\n  {'time': '12:00', id: faker.random.number()},\n  {'time': '13:00', id: faker.random.number()},\n  {'time': '14:00', id: faker.random.number()},\n  {'time': '15:00', id: faker.random.number()},\n  {'time': '16:00', id: faker.random.number()},\n  {'time': '17:00', id: faker.random.number()},\n  {'time': '18:00', id: faker.random.number()},\n  {'time': '19:00', id: faker.random.number()},\n  {'time': '20:00', id: faker.random.number()},\n  {'time': '21:00', id: faker.random.number()},\n];\n\nconst DailyPage = () => {\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\" style={{width: 500}}>\n        <Card>\n          <Link to=\"/home\">\n            <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n          </Link>\n          <Table dataSource={data} style={{marginTop: 20}}>\n            <Column title=\"เวลา\" dataIndex=\"time\" key=\"time\" />\n            <Column\n              className={typeName[faker.random.number(1)]}\n              title=\"เลข PO\"\n              dataIndex=\"id\"  \n              key=\"id\" \n            />\n          </Table>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default DailyPage","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {\n  LoginPage,\n  HomePage,\n  CreatePoPage,\n  CalendarPage,\n  OtherPage,\n  DailyPage\n} from './page'\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route exact path=\"/home\" component={HomePage} />\n      <Route exact path=\"/createPo\" component={CreatePoPage} />\n      <Route exact path=\"/calendar\" component={CalendarPage}/>\n      <Route exact path=\"/daily\" component={DailyPage} />\n      <Route exact path=\"/other\" component={OtherPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>, \n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}