{"version":3,"sources":["page/login.js","page/home.js","features/normalFieldSet.js","features/productFieldSet.js","features/dynamicFieldSet.js","features/totalFieldSet.js","page/createPo.js","page/calendar.js","page/other.js","page/daily.js","App.js","serviceWorker.js","index.js"],"names":["LoginPage","className","title","bordered","headStyle","textAlign","fontSize","style","width","onSubmit","Item","defaultValue","prefix","type","color","placeholder","to","htmlType","size","HomePage","gutter","span","display","paddingBottom","Option","Select","NormalFieldSet","defaultC","faker","random","number","label","value","name","findName","Math","floor","Group","Panel","Collapse","ProductFieldSet","props","defaultP","marginTop","marginBottom","defaultActiveKey","keyItem","showArrow","extra","children","forceRender","key","labelCol","xs","sm","wrapperCol","commerce","productName","addonAfter","id","DynamicFieldSet","remove","k","form","keys","getFieldValue","length","setFieldsValue","filter","add","nextKeys","concat","this","getFieldDecorator","formItemLayout","initialValue","formItems","map","index","required","position","top","right","onClick","handleSubmit","offset","Component","WrappedDynamicFieldSet","Form","create","TotalFieldSet","margin","CreatePoPage","height","marginRight","dateCellRender","listData","date","content","getListData","item","trigger","status","text","monthCellRender","num","month","getMonthData","CalendarPage","Column","Table","TabPane","Tabs","levelName","selectorLV","data","push","customName","w1","w2","w3","w","wc","qc","createMock","OtherPage","tab","dataSource","dataIndex","render","record","tags","tag","typeName","DailyPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84211b2d.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, Form, Icon, Input, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  return (\n    <div className=\"container\">\n      <section className=\"content\">\n        <Card title={'WELCOME ABLE EASTERN'} bordered={false} headStyle={{textAlign:'center', fontSize: 25}} style={{ width: 400 }}>\n          <Form onSubmit={() => {}} className=\"login-form\">\n        <Form.Item>\n            <Input\n              defaultValue=\"admin\"\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />\n        </Form.Item>\n        <Form.Item>\n            <Input\n              defaultValue=\"admin\"\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n        </Form.Item>\n        <Form.Item>\n          <div className=\"form-button\">\n            <Link to=\"/home\">\n              <Button type=\"primary\" htmlType=\"button\" size='large'>\n                Log in\n              </Button>\n            </Link>\n          </div>\n        </Form.Item>\n      </Form>\n        </Card>\n      </section>\n    </div>\n  );\n}\n\nexport default LoginPage;\n","import React from 'react'\nimport { Card, Col, Row, Icon, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return (\n    <div className=\"container\">\n      <section className=\"content\">\n      <Row gutter={16}>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"fund\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/createPo\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  สร้าง PO\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"calendar\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/calendar\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  ปฏิทิน\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n        <Col span={8}>\n          <Card bordered={false} style={{width: 300}}>\n            <div style={{textAlign: 'center'}}>\n              <Icon type=\"appstore\" style={{ fontSize: '60px', display: 'block', paddingBottom: 30 }} />\n              <Link to=\"/other\">\n                <Button type=\"primary\" htmlType=\"button\" size='large'>\n                  Other\n                </Button>\n              </Link>\n            </div>\n          </Card>\n        </Col>\n      </Row>\n      </section>\n    </div>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport {\n  Form,\n  Input,\n  Radio,\n  DatePicker,\n  Select\n} from 'antd';\nimport faker from 'faker'\n\nconst { Option } = Select;\nconst NormalFieldSet = () => {\n  const defaultC = faker.random.number()\n  return (\n    <div>\n      <Form.Item label=\"วันที่สร้าง PO\"><DatePicker style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"เลขที่ PO\"><Input style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"รหัสลูกค้า\">\n              <Select style={{width: 200}} defaultValue={defaultC}>\n                <Option value={defaultC}>{defaultC}</Option>\n                <Option value={faker.random.number()}>{faker.random.number()}</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"ชื่อลูกค้า\">\n              <Input style={{width: 200}} defaultValue={faker.name.findName()} />\n            </Form.Item>\n            <Form.Item label=\"ชั้น\"><Input style={{width: 50}} defaultValue={Math.floor(Math.random() * 100) + 1} /></Form.Item>\n            <Form.Item label=\"วันที่ส่งของ\"><DatePicker style={{width: 200}} /></Form.Item>\n            <Form.Item label=\"เงื่อนไข\">\n              <Radio.Group defaultValue=\"yes\">\n                <Radio value=\"yes\"><span style={{color: '#43a047'}}>สามารถเปลี่ยนแปลงได้</span></Radio>\n                <Radio value=\"no\"><span style={{color: '#d32f2f'}}>ไม่สามารถเปลี่ยนแปลงได้</span></Radio>\n              </Radio.Group>\n            </Form.Item>\n    </div>\n  )\n}\n\nexport default NormalFieldSet","import React from 'react'\nimport {\n  Form,\n  Input,\n  Radio,\n  Select,\n  Collapse\n} from 'antd';\nimport faker from 'faker'\n\nconst { Panel } = Collapse;\nconst { Option } = Select;\n\nconst ProductFieldSet = (props) => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  const defaultP = faker.random.number()\n\n  return (\n    <Collapse style={{ marginTop: 16, marginBottom: 20, width: 400 }} defaultActiveKey={[props.keyItem]}>\n      <Panel showArrow={false} extra={props.children} forceRender={true} key={props.keyItem}>\n      <Form {...formItemLayout}>\n      <Form.Item label=\"รหัสสินค้า\">\n              <Select style={{width: 200}} defaultValue={defaultP}>\n                <Option value={defaultP}>{defaultP}</Option>\n                <Option value={faker.random.number()}>{faker.random.number()}</Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"ชื่อสินค้า\">\n              <Input style={{width: 200}} defaultValue={faker.commerce.productName()} />\n            </Form.Item>\n      <Form.Item label=\"ไม้\">\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n        </Form.Item>\n      <Form.Item label=\"ตะปู\">\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n        </Form.Item>\n      <Form.Item label=\"ลูกเต๋า\">\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n      </Form.Item>\n      <Form.Item label=\"ใส่ไม้\">\n        <Radio.Group defaultValue=\"w_easy\">\n          <Radio value=\"w_easy\">ง่าย</Radio>\n          <Radio value=\"w_normal\">ปกติ</Radio>\n          <Radio value=\"w_hard\">ยาก</Radio>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item label=\"ประกอบไม้\">\n        <Radio.Group defaultValue=\"wh_easy\">\n          <Radio value=\"wh_easy\">ง่าย</Radio>\n          <Radio value=\"wh_normal\">ปกติ</Radio>\n          <Radio value=\"wh_hard\">ยาก</Radio>\n        </Radio.Group>\n      </Form.Item>\n      <Form.Item label=\"QC\">\n        <Radio.Group defaultValue=\"qc_easy\">\n          <Radio value=\"qc_easy\">ง่าย</Radio>\n          <Radio value=\"qc_normal\">ปกติ</Radio>\n          <Radio value=\"qc_hard\">ยาก</Radio>\n        </Radio.Group>\n      </Form.Item>\n      </Form>\n    </Panel>\n    </Collapse>\n  )\n}\n\nexport default ProductFieldSet","import React, { Component } from 'react'\nimport { Form, Card, Icon, Button } from 'antd';\nimport ProductFieldSet from './productFieldSet'\n\nlet id = 0;\n\nclass DynamicFieldSet extends Component {\n\n  remove = k => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    // We need at least one passenger\n    if (keys.length === 1) {\n      return;\n    }\n\n    // can use data-binding to set\n    form.setFieldsValue({\n      keys: keys.filter(key => key !== k),\n    });\n  };\n\n  add = () => {\n    const { form } = this.props;\n    // can use data-binding to get\n    const keys = form.getFieldValue('keys');\n    const nextKeys = keys.concat(id++);\n    // can use data-binding to set\n    // important! notify form to detect changes\n    form.setFieldsValue({\n      keys: nextKeys,\n    });\n  };\n  \n  render() {\n    const { getFieldDecorator, getFieldValue } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 20 },\n      },\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: { span: 24, offset: 0 },\n        sm: { span: 20, offset: 4 },\n      },\n    };\n    getFieldDecorator('keys', { initialValue: [] });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => (\n      <Form.Item {...formItemLayout} required={false}\n        key={k}>\n        <ProductFieldSet keyItem={k}>\n          {keys.length > 1 ? (\n            <Icon className=\"dynamic-delete-button\" type=\"minus-circle-o\" style={{position: 'absolute', top: 5, right: 10}} onClick={() => this.remove(k)}/>) : null}\n        </ProductFieldSet>\n      </Form.Item>\n    ));\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Card style={{ marginTop: 16, marginBottom: 20 }} type=\"inner\" title=\"กลุ่มสินค้า\">\n        {formItems}\n        <Form.Item {...formItemLayoutWithOutLabel}>\n          <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\n            <Icon type=\"plus\" /> เพิ่มสินค้า\n          </Button>\n        </Form.Item>\n        </Card>\n      </Form>\n    );\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\n\nexport default WrappedDynamicFieldSet\n","import React from 'react'\nimport { Card, Form, Input} from 'antd';\n\nconst TotalFieldSet = () => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  return (\n    <Card style={{ marginTop: 16, marginBottom: 20 }} type=\"inner\" title=\"คำนวณวัตถุดิบ\">\n      <Form {...formItemLayout}>\n      <Form.Item label=\"ไม้\" style={{display: 'inline-block', width: 125, margin: 3}}>\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n        </Form.Item>\n      <Form.Item label=\"ตะปู\" style={{display: 'inline-block', width: 125, margin: 3}}>\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n        </Form.Item>\n      <Form.Item label=\"ลูกเต๋า\" style={{display: 'inline-block', width: 125, margin: 3}}>\n        <Input addonAfter=\"ตัว\" defaultValue={Math.floor(Math.random() * 100) + 1} />\n      </Form.Item>\n      </Form>\n    </Card>\n  )\n}\n\nexport default TotalFieldSet","import React from 'react'\nimport {\n  Card,\n  Form,\n  Button,\n} from 'antd';\nimport { Link } from \"react-router-dom\";\nimport NormalFieldSet from '../features/normalFieldSet'\nimport WrappedDynamicFieldSet from '../features/dynamicFieldSet'\nimport TotalFieldSet from '../features/totalFieldSet'\n\nconst CreatePoPage = () => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\">\n        <Card title=\"สร้าง PO\" style={{width:500}}>\n          <Form {...formItemLayout}>\n            <NormalFieldSet />\n            <WrappedDynamicFieldSet />\n            <TotalFieldSet />\n            <div className=\"form-button\">\n              <Link to=\"/home\">\n                <Button type=\"primary\" htmlType=\"button\" size='large' style={{marginRight: 10}}>ยืนยัน</Button>\n                <Button htmlType=\"button\" size='large'>ย้อนกลับ</Button>\n              </Link>\n            </div>\n          </Form>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default CreatePoPage","import React from 'react'\nimport { Card, Calendar, Badge, Popover } from 'antd'\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\n\nconst getListData = (value) => {\n  let listData;\n  switch (value.date()) {\n    case 8:\n      listData = [\n        { type: 'error', content: 'งานเปลี่ยนแปลงไม่ได้' },\n      ];\n      break;\n    case 10:\n      listData = [\n        { type: 'success', content: 'งานเปลี่ยนแปลงได้' },\n      ];\n      break;\n    case 15:\n      listData = [\n        { type: 'success', content: 'งานเปลี่ยนแปลงได้' },\n      ];\n      break;\n    default:\n  }\n  return listData || [];\n}\n\nconst dateCellRender = (value) => {\n  const listData = getListData(value);\n  const content = (\n    <div>\n      <p>เลขที่ PO: {faker.random.number()}</p>\n      <p>ชื่อลูกค้า: {faker.name.findName()}</p>\n      <p>จำนวน: {faker.random.number(100)}</p>\n    </div>\n  );\n  return (\n    <ul className=\"events\">\n      {listData.map(item => (\n        <li key={item.content}>\n          <Popover content={content} title=\"รายละเอียด\" trigger=\"hover\">\n            <Badge status={item.type} text={item.content} />\n          </Popover>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nconst getMonthData = (value) => {\n  if (value.month() === 8) {\n    return 1394;\n  }\n}\n\nconst monthCellRender = (value) =>{\n  const num = getMonthData(value);\n  return num ? (\n    <div className=\"notes-month\">\n      <section>{num}</section>\n      <span>Backlog number</span>\n    </div>\n  ) : null;\n}\n\n\nconst CalendarPage = () => {\n  return (\n    <div className=\"container\" style={{width: 700, height: 'auto'}}>\n      <Card>\n        <Link to=\"/home\">\n          <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n        </Link>\n        <Link to=\"/daily\">\n          <Button type=\"primary\" htmlType=\"button\" size='large'>วันปัจจุบัน</Button>\n        </Link>\n        <Calendar dateCellRender={dateCellRender} monthCellRender={monthCellRender} />\n      </Card>\n    </div>\n  )\n}\n\nexport default CalendarPage","import React from 'react'\nimport { Table, Divider, Tag, Card, Tabs } from 'antd';\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\nconst { Column } = Table;\nconst { TabPane } = Tabs;\n\nconst levelName = ['ง่าย', 'ปกติ', 'ยาก']\nconst selectorLV = faker.random.number(2)\nconst data = [];\nconst createMock = () => {\n  for (let index = 0; index < 20; index++) {\n    data.push(\n      {\n        key: faker.random.number(),\n        customName: faker.name.findName(),\n        size: faker.random.number(),\n        w1: faker.random.number(100),\n        w2: faker.random.number(100),\n        w3: faker.random.number(100),\n        w: [levelName[selectorLV]],\n        wc: [levelName[selectorLV]],\n        qc: [levelName[selectorLV]],\n      }\n    )\n  }\n}\n\ncreateMock()\n\nconst OtherPage = () => {\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\" style={{width: 750}}>\n      <Card>\n        <Link to=\"/home\">\n          <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n        </Link>\n        <Tabs defaultActiveKey=\"1\" >\n          <TabPane tab=\"ลูกค้า\" key=\"1\">\n          <Link to=\"/home\">\n            <Button htmlType=\"button\" type=\"primary\" size='large' style={{marginRight: 10}}>เพิ่มลูกค้า</Button>\n          </Link>\n              <Table dataSource={data} style={{marginTop: 20}}>\n                <Column title=\"รหัสลูกค้า\" dataIndex=\"key\" key=\"key\" />\n                <Column title=\"ชื่อลูกค้า\" dataIndex=\"customName\" key=\"customName\" />\n                <Column\n                  title=\"\"\n                  key=\"action\"\n                  render={(text, record) => (\n                    <span>\n                      <a>แก้ไข</a>\n                      <Divider type=\"vertical\" />\n                      <a>ลบ</a>\n                    </span>\n                  )}\n                />\n              </Table>\n          </TabPane>\n          <TabPane tab=\"สินค้า\" key=\"2\">\n          <Link to=\"/home\">\n            <Button htmlType=\"button\" type=\"primary\" size='large' style={{marginRight: 10}}>เพิ่มสินค้า</Button>\n          </Link>\n              <Table dataSource={data} style={{marginTop: 20}}>\n                <Column title=\"รหัสสินค้า\" dataIndex=\"key\" key=\"key\" />\n                <Column title=\"ขนาดสินค้า\" dataIndex=\"size\" key=\"size\" />\n                <Column title=\"ไม้\" dataIndex=\"w1\" key=\"w1\" />\n                <Column title=\"ตะปู\" dataIndex=\"w2\" key=\"w2\" />\n                <Column title=\"ลูกเต๋า\" dataIndex=\"w3\" key=\"w3\" />\n                <Column\n                  title=\"ใส่ไม้\"\n                  dataIndex=\"w\"\n                  key=\"w\"\n                  render={tags => (\n                    <span>\n                      {tags.map(tag => (\n                        <Tag color=\"blue\" key={tag}>\n                          {tag}\n                        </Tag>\n                      ))}\n                    </span>\n                  )}\n                />\n                <Column\n                  title=\"ประกอบ\"\n                  dataIndex=\"wc\"\n                  key=\"wc\"\n                  render={tags => (\n                    <span>\n                      {tags.map(tag => (\n                        <Tag color=\"blue\" key={tag}>\n                          {tag}\n                        </Tag>\n                      ))}\n                    </span>\n                  )}\n                />\n                <Column\n                  title=\"QC\"\n                  dataIndex=\"qc\"\n                  key=\"qc\"\n                  render={tags => (\n                    <span>\n                      {tags.map(tag => (\n                        <Tag color=\"blue\" key={tag}>\n                          {tag}\n                        </Tag>\n                      ))}\n                    </span>\n                  )}\n                />\n                <Column\n                  title=\"\"\n                  key=\"action\"\n                  render={(text, record) => (\n                    <span>\n                      <a>แก้ไข</a>\n                      <Divider type=\"vertical\" />\n                      <a>ลบ</a>\n                    </span>\n                  )}\n                />\n              </Table>\n          </TabPane>\n        </Tabs>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default OtherPage","import React from 'react'\nimport { Table, Card } from 'antd';\nimport { Button } from 'antd';\nimport { Link } from \"react-router-dom\";\nimport faker from 'faker'\n\nconst { Column } = Table;\n\nconst typeName = ['change-section', 'fix-section']\nconst data = [\n  {'time': '8:00', id: faker.random.number()},\n  {'time': '9:00', id: faker.random.number()},\n  {'time': '10:00', id: faker.random.number()},\n  {'time': '11:00', id: faker.random.number()},\n  {'time': '12:00', id: faker.random.number()},\n  {'time': '13:00', id: faker.random.number()},\n  {'time': '14:00', id: faker.random.number()},\n  {'time': '15:00', id: faker.random.number()},\n  {'time': '16:00', id: faker.random.number()},\n  {'time': '17:00', id: faker.random.number()},\n  {'time': '18:00', id: faker.random.number()},\n  {'time': '19:00', id: faker.random.number()},\n  {'time': '20:00', id: faker.random.number()},\n  {'time': '21:00', id: faker.random.number()},\n];\n\nconst DailyPage = () => {\n  return (\n    <div className=\"container\" style={{height: 'auto'}}>\n      <section className=\"content\" style={{width: 500}}>\n        <Card>\n          <Link to=\"/home\">\n            <Button htmlType=\"button\" size='large' style={{marginRight: 10}}>ย้อนกลับ</Button>\n          </Link>\n          <Table dataSource={data} style={{marginTop: 20}}>\n            <Column title=\"เวลา\" dataIndex=\"time\" key=\"time\" />\n            <Column\n              className={typeName[faker.random.number(1)]}\n              title=\"เลข PO\"\n              dataIndex=\"id\"  \n              key=\"id\" \n            />\n          </Table>\n        </Card>\n      </section>\n    </div>\n  )\n}\n\nexport default DailyPage","import React from 'react';\nimport {\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport {\n  LoginPage,\n  HomePage,\n  CreatePoPage,\n  CalendarPage,\n  OtherPage,\n  DailyPage\n} from './page'\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={LoginPage} />\n      <Route exact path=\"/home\" component={HomePage} />\n      <Route exact path=\"/createPo\" component={CreatePoPage} />\n      <Route exact path=\"/calendar\" component={CalendarPage}/>\n      <Route exact path=\"/daily\" component={DailyPage} />\n      <Route exact path=\"/other\" component={OtherPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <Router basename={process.env.PUBLIC_URL}>\n    <App />\n  </Router>, \n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}